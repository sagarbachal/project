---
- name: Ensure that the ansible user exists on all servers with key based access
  hosts:
    - servers
    - localhost
  remote_user: vagrant
  vars:
    ansible_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      32353865393862336335363333636562316336646433393833393262613964636132613562653461
      6666643337386262353064316630333830373032393665380a373233393035346439343063393936
      38353833663336366461386265376665393762356534626165656336626163616432313865613632
      3133636466396666620a313835656538303264623730633162396366653464333737656437363734
      3331
    password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      36663364626563303665313364373930393938353262376236636462356365633562376437376165
      3032636137343866323535336634333739313032613733390a313366643332633230343861663036
      34303631393937396231336137303335626466396363656338663334313764616363393164303138
      6536636239333534390a643431313733306162373535643665333065613734356631366263323634
      6439
  become: true
  tasks:
      -name: Create the ansible user on the managed hosts
        user: &createuser
        name: ansible
        state: present
        create_home: true
        when: '"servers" in group_names'
 
             - block:
      - name: Create the ansible user on the local machine
        user:
          <<: *createuser
          password: "{{ password }}"
          generate_ssh_key: true
 
      - name: Read in the ssh key from the local machine's ansible user
        shell: /bin/cat /home/ansible/.ssh/id_rsa.pub
        become_user: ansible
        register: ssh_key
        when: inventory_hostname == 'localhost'
         
    -   name: Create the file in sudoers.d for the ansible user
        copy:
        content: "ansible ALL=(ALL) NOPASSWD: ALL"
        dest: /etc/sudoers.d/ansible

      
    - name: Copy over the ssh public key for key based access
      authorized_key:
          user: ansible
          key: "{{ hostvars['localhost']['ssh_key']['stdout'] }}"
          state: present

